<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Generative Unity</title>
    <link>https://generativeunity.henrikgieselmann.com/</link>
    <description>Recent content on Generative Unity</description>
    <generator>Hugo -- gohugo.io</generator>
    
	<atom:link href="https://generativeunity.henrikgieselmann.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/00_Introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/00_Introduction/</guid>
      <description>What is this book? The core idea of this book is teaching Unity as tool for creatives of all all kinds. This is “living” book. This means things will change, parts will grow, others will wither. This is for multiple reasons. For one, I am not an expert on all topics in Unity, especially not programming. I have background in Media-Design and merely am trying to learn and in this case teach Unity to the best of my ability.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/01_The_Editor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/01_The_Editor/</guid>
      <description>Getting started with Unity So you managed your way through the Introduction and are still here. Awesome! The first step on your Journey to learn is to actually go and download Unity. While you could just head to unity3d.com and grab the latest and greatest Version of Unity Personal, I would suggest getting the Unity Hub. Unity Hub will help you manage your Projects as well as the Versions of Unity you have installed on your machine.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/02_Moving_Things/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/02_Moving_Things/</guid>
      <description>On Design Throughout the first chapters we will use Josef Albers “Hommage to the Square” as a starting point for experimentation. This will be a great way to get started coding with small script and also see how just a few lines of code can change a lot of the feel of things. These two thing will perfetly go hand in hand, as Design, as well as Coding are Skills.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/03_The_Console/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/03_The_Console/</guid>
      <description>The Console - Your best friend This chapter is a short but important intermezzo. Maybe you have already encountered the console. Whenever you write code your computer does not understand it will tell you so in the console. And worse, it will also block you from running your code! As we are Coding in C# your computer will be very, very picky about the code you write. So if you haven’t already fabricated an error.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/04_UserInput/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/04_UserInput/</guid>
      <description>Conditionals So we kow how to code some absolute basic movement. But that’s built upon the conveneience of the Sin Function and that’s really rather limited. So what if we could do things based off of some condition. Let’s say you press a button, move the mouse or tilt your phone? This is where Conditionals come in. Conditionals are one way to manage how your code is flowing (”Control Flow”).</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/05_Functions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/05_Functions/</guid>
      <description>You actually know a lo t about methods already. We have been using them all along, yet now we will start creating our own. In methods you can bundle together lines of code that belong logically together. They are very helpful when you need to reuse those lines a lot but they are also helpful for structuring your code. Methods also take arguments and use them in their code-block. But let’s not get ahead of ourselves and look at a very simple function: void SayHello(){Debug.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/06_MultipleObjects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/06_MultipleObjects/</guid>
      <description>Multiple Object Workflow If you followed along with some of the examples, you probably realized we are doing a lot of manual labor in changing things on the Unity Editor itself. Each Square has to get the new Script and so forth. Then again programming is a lazy mans art. The less manual labor we have to do the better. In this Chapter we will introduce ways to handle multiple Squares at once.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/07_ClassicGC/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/07_ClassicGC/</guid>
      <description>Classic CC Techniques in Unity If you came here as someone with a background in Processing or p5.js, you might be missing some very common processing techniques, that aren’t too obvious to recreate in Unity. The first thing being the complete handling of the background. In Processing you would handle this in the initial lines of code of your script. In Unity all this functionality is tied to the camera.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/07_StartingToDesign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/07_StartingToDesign/</guid>
      <description>The Generative Design pitfall This book claims to be about “Generative Design” and with such about Design in general. And that actually is a bold claim and one I am reaaaaly, really uncomfortable with. While it’s one thing to tell you how programming works, design is a whole different beast. Programming is based on rules. And rules are easy to describe and put on paper. If you forget to put a semicolon in the right place your program won’t run.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/08_ClassesAndOOP/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/08_ClassesAndOOP/</guid>
      <description>Classes and Object Orientation Don’t Panic! When I first started out coding and asked friends what their experiences was, I heard a few times: “It’s not that bad, but I don’t get Object Orientation”. And when I first heard of it or read on it on the docs I a little bit baffled as well. But when I learned C# for the use in Unity things made “click” very fast.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/09_DelegatesAndEvents/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/09_DelegatesAndEvents/</guid>
      <description> C# Language Features </description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/10_BestPractices/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/10_BestPractices/</guid>
      <description>Designing Code Before we dive deeper into considerations about design, let’s take a very short break and discuss designing code. As with many things in design, there are often many, many ways to solve one and the same problem. You soon will, or already have seen, me writing code that you would have approached differently. And it is definitely possible that your solution is better. (And please let me know if you think I do some really stupid stuff!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/11_StartingToDesign/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/11_StartingToDesign/</guid>
      <description>The Generative Design pitfall This book claims to be about “Generative Design” and with such about Design in general. And that actually is a bold claim and one I am reaaaaly, really uncomfortable with. While it’s one thing to tell you how programming works, design is a whole different beast. Programming is based on rules. And rules are easy to describe and put on paper. If you forget to put a semicolon in the right place your program won’t run.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/12_Animation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/12_Animation/</guid>
      <description> Animation Splines with code </description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/13_Physics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/13_Physics/</guid>
      <description>Physics and Raycasts!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/14_Sound/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/14_Sound/</guid>
      <description> Animation Splines with code </description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/15_UserInterfaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/15_UserInterfaces/</guid>
      <description>User Interfaces!</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/16_VFXGraph/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/16_VFXGraph/</guid>
      <description>Lights and a bit about Shaders</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/17_ShadingAndLighting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/17_ShadingAndLighting/</guid>
      <description>Title: Master
Author:
Lights and a bit about Shaders</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/18_TexturesAndImages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/18_TexturesAndImages/</guid>
      <description>Disclaimer: This chapter is written based on Unity 2019.2 and ARFoundation Package Version 2.0.2. I can only properly show the setup for Android Phones as well, as I do not have an iOS development environment.
Augmented Reality Definition Designing for Augemented Reality Augmented Reality is one of the most interesting fields in design right now. In contrast to print or webdesign many of the precieved rules are not yet written.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/19_PostProcessingStack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/19_PostProcessingStack/</guid>
      <description>Disclaimer: This chapter is written based on Unity 2019.2 and ARFoundation Package Version 2.0.2. I can only properly show the setup for Android Phones as well, as I do not have an iOS development environment.
Augmented Reality Definition Designing for Augemented Reality Augmented Reality is one of the most interesting fields in design right now. In contrast to print or webdesign many of the precieved rules are not yet written.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/20_MobileAndAR/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/20_MobileAndAR/</guid>
      <description>Disclaimer: This chapter is written based on Unity 2019.2 and ARFoundation Package Version 2.0.2. I can only properly show the setup for Android Phones as well, as I do not have an iOS development environment.
Augmented Reality Definition Designing for Augemented Reality Augmented Reality is one of the most interesting fields in design right now. In contrast to print or webdesign many of the precieved rules are not yet written.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/21_P1_ScifiTunnel/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/21_P1_ScifiTunnel/</guid>
      <description>Procedural Placement of Objects</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/22_P2_WeatherApp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/22_P2_WeatherApp/</guid>
      <description>Getting External Data through APIs</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/23_P3_PianoDrivenEnvironment/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/23_P3_PianoDrivenEnvironment/</guid>
      <description>Embedding external Scripts and connecting Data from Hardware Devices</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/24_P4_OpenCV_Project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/24_P4_OpenCV_Project/</guid>
      <description>Artificial Intelligence and External Script Communication</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/98_AdditionalResources/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/98_AdditionalResources/</guid>
      <description>Addtional Resources You finished everything ans ask yourself: What’s next? My style of writing isn’t yours? These are rescources which are somewhat related to the topic, but can ben written for other programming languages or software. Yet they still hold - in my eyes -tremendous value. So feel free to check them out!
Books: - The nature of Code - Daniel Shiffman - Eloquent Javascript - Marijn Haverbeke - Graphic Design: The New Basics - Ellen Lupton, Jennifer Cole Phillips</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/docs/99_Github/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/docs/99_Github/</guid>
      <description>Let’s talk about Version Control You probably noticed, or will soon, that sometimes you have an idea on how to improve your code. You reformat your code, delete some old code here some there and all is good. The next day you look at your code an realize that it was laaate last night and everything you did, was just breaking stuff. But what did you actually change last night?</description>
    </item>
    
    <item>
      <title></title>
      <link>https://generativeunity.henrikgieselmann.com/posts/01_The_Editor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://generativeunity.henrikgieselmann.com/posts/01_The_Editor/</guid>
      <description>Getting started with Unity So you managed your way through the Introduction and are still here. Awesome! The first step on your Journey to learn is to actually go and download Unity. While you could just head to unity3d.com and grab the latest and greatest Version of Unity Personal, I would suggest getting the Unity Hub. Unity Hub will help you manage your Projects as well as the Versions of Unity you have installed on your machine.</description>
    </item>
    
  </channel>
</rss>